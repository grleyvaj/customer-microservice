{
	"info": {
		"_postman_id": "72b101af-6fdc-423f-9ea8-91cf20052977",
		"name": "Customer-MS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13392925",
		"_collection_link": "https://gloria-leyva-jerez.postman.co/workspace/DEVSU~977f47a1-de0e-4afd-a872-4291373ebf63/collection/13392925-72b101af-6fdc-423f-9ea8-91cf20052977?action=share&source=collection_link&creator=13392925"
	},
	"item": [
		{
			"name": "Create customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response contains all required fields\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"client_id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"gender\");",
							"    pm.expect(jsonData).to.have.property(\"age\");",
							"    pm.expect(jsonData).to.have.property(\"address\");",
							"    pm.expect(jsonData).to.have.property(\"phone\");",
							"    pm.expect(jsonData).to.have.property(\"encrypted_password\");",
							"    pm.expect(jsonData).to.have.property(\"state\", true);",
							"});",
							"",
							"",
							"pm.test(\"Password has been encrypted\", function () {",
							"    const jsonData = pm.response.json();",
							"    const rawPassword = pm.variables.get(\"randomPassword\");",
							"    pm.expect(jsonData.encrypted_password).to.not.eql(rawPassword);",
							"});",
							"",
							"pm.test(\"Save customer id to collection variable\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"CUSTOMER_ID\", jsonData.id);",
							"    pm.expect(pm.collectionVariables.get(\"CUSTOMER_ID\")).to.eql(jsonData.id);",
							"});",
							"",
							"pm.test(\"Save customer client_id to collection variable\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"CUSTOMER_CLIENT_ID\", jsonData.client_id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"{{$randomStreetAddress}}\",\n    \"client_id\": \"{{$randomUUID}}\",\n    \"gender\": \"{{randomGender}}\",\n    \"name\": \"{{$randomFullName}}\",\n    \"password\": \"{{randomPassword}}\",\n    \"age\": \"{{randomAge}}\",\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create customer (Unique client)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"ClientId already exists error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.clientId.unique\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"{{$randomStreetAddress}}\",\n    \"client_id\": \"{{CUSTOMER_CLIENT_ID}}\",\n    \"gender\": \"{{randomGender}}\",\n    \"name\": \"{{$randomFullName}}\",\n    \"password\": \"{{randomPassword}}\",\n    \"age\": \"{{randomAge}}\",\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create customer (Required fields)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains all expected error codes\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"",
							"    const expectedCodes = [",
							"        \"customer.clientId.notBlank\",",
							"        \"customer.age.min\",",
							"        \"customer.gender.null\",",
							"        \"customer.password.notBlank\",",
							"        \"customer.name.notBlank\",",
							"        \"customer.address.notBlank\"",
							"    ];",
							"",
							"    expectedCodes.forEach(code => {",
							"        pm.expect(errors).to.include(code);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create customer (Min age)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Age validation error (min 18)\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"",
							"    pm.expect(errors).to.include(\"customer.age.min\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"{{$randomStreetAddress}}\",\n    \"client_id\": \"{{$randomUUID}}\",\n    \"gender\": \"{{randomGender}}\",\n    \"name\": \"{{$randomFullName}}\",\n    \"password\": \"{{randomPassword}}\",\n    \"age\": 15,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create customer (Invalid size)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							"",
							"///---------- Invalid",
							"",
							"// Generar una cadena inválida repitiendo un carácter 300 veces",
							"const invalidStr = \"X\".repeat(300);",
							"pm.variables.set(\"randomInvalidCharacters\", invalidStr);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Name max length validation error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.name.max\");",
							"});",
							"",
							"pm.test(\"Address max length validation error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.address.max\");",
							"});",
							"",
							"pm.test(\"ClientId max length validation error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.clientId.max\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"{{randomInvalidCharacters}}\",\n    \"client_id\": \"{{randomInvalidCharacters}}\",\n    \"gender\": \"{{randomGender}}\",\n    \"name\": \"{{randomInvalidCharacters}}\",\n    \"password\": \"{{randomPassword}}\",\n    \"age\": \"{{randomAge}}\",\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create customer (Invalid regex)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Password invalid format error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.password.invalidFormat\");",
							"});",
							"",
							"pm.test(\"Phone invalid format error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.phone.pattern\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"{{$randomStreetAddress}}\",\n    \"client_id\": \"{{$randomUUID}}\",\n    \"gender\": \"{{randomGender}}\",\n    \"name\": \"{{$randomFullName}}\",\n    \"password\": \"::any::\",\n    \"age\": \"{{randomAge}}\",\n    \"phone\": \"::any::\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Get customer details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains all required fields\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"client_id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"gender\");",
							"    pm.expect(jsonData).to.have.property(\"age\");",
							"    pm.expect(jsonData).to.have.property(\"address\");",
							"    pm.expect(jsonData).to.have.property(\"phone\");",
							"    pm.expect(jsonData).to.have.property(\"encrypted_password\");",
							"    pm.expect(jsonData).to.have.property(\"state\", true);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}"
						}
					]
				},
				"description": "Retrieve detailed information about a specific customer by ID"
			},
			"response": [
				{
					"name": "Customer details successfully retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Get customer details (Not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "ANY"
						}
					]
				},
				"description": "Retrieve detailed information about a specific customer by ID"
			},
			"response": [
				{
					"name": "Customer details successfully retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains all required fields\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    ",
							"    const requestClientId = pm.variables.get(\"CUSTOMER_CLIENT_ID\");",
							"    pm.expect(jsonData).to.have.property(\"client_id\", requestClientId);",
							"",
							"    pm.expect(jsonData).to.have.property(\"name\", \"::name::\");",
							"    pm.expect(jsonData).to.have.property(\"gender\", \"Male\");",
							"    pm.expect(jsonData).to.have.property(\"age\", 30);",
							"    pm.expect(jsonData).to.have.property(\"address\", \"::address::\");",
							"   ",
							"    const requestPhone = pm.variables.get(\"randomPhone\");",
							"    pm.expect(jsonData).to.have.property(\"phone\", requestPhone);",
							"",
							"    pm.expect(jsonData).to.have.property(\"encrypted_password\");",
							"    pm.expect(jsonData).to.have.property(\"state\", true);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"::address::\",\n    \"client_id\": \"{{CUSTOMER_CLIENT_ID}}\",\n    \"gender\": \"MALE\",\n    \"name\": \"::name::\",\n    \"age\": 30,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Modify the information of an existing customer"
			},
			"response": [
				{
					"name": "Customer successfully updated",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update customer (Required fields)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							"",
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains all expected error codes\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"",
							"    const expectedCodes = [",
							"        \"customer.clientId.notBlank\",",
							"        \"customer.age.min\",",
							"        \"customer.gender.null\",",
							"        \"customer.name.notBlank\",",
							"        \"customer.address.notBlank\"",
							"    ];",
							"",
							"    expectedCodes.forEach(code => {",
							"        pm.expect(errors).to.include(code);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Modify the information of an existing customer"
			},
			"response": [
				{
					"name": "Customer successfully updated",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update customer (Not found)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							"",
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"::address::\",\n    \"client_id\": \"{{randomClientId}}\",\n    \"gender\": \"MALE\",\n    \"name\": \"::name::\",\n    \"age\": 30,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "ANY",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Modify the information of an existing customer"
			},
			"response": [
				{
					"name": "Customer successfully updated",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Save customer client_id to collection variable\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"CUSTOMER_OTHER_CLIENT_ID\", jsonData.client_id);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"{{$randomStreetAddress}}\",\n    \"client_id\": \"{{$randomUUID}}\",\n    \"gender\": \"{{randomGender}}\",\n    \"name\": \"{{$randomFullName}}\",\n    \"password\": \"{{randomPassword}}\",\n    \"age\": \"{{randomAge}}\",\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update customer (Unique client)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							"",
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"ClientId already exists error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.clientId.unique\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"::address::\",\n    \"client_id\": \"{{CUSTOMER_OTHER_CLIENT_ID}}\",\n    \"gender\": \"MALE\",\n    \"name\": \"::name::\",\n    \"age\": 30,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Modify the information of an existing customer"
			},
			"response": [
				{
					"name": "Customer successfully updated",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Partially update customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains all required fields\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    ",
							"    const requestClientId = pm.variables.get(\"randomClientId\");",
							"    pm.expect(jsonData).to.have.property(\"client_id\", requestClientId);",
							"",
							"    pm.expect(jsonData).to.have.property(\"name\", \"::patch-name::\");",
							"    pm.expect(jsonData).to.have.property(\"gender\", \"Female\");",
							"    pm.expect(jsonData).to.have.property(\"age\", 50);",
							"    pm.expect(jsonData).to.have.property(\"address\", \"::patch-address::\");",
							"   ",
							"    const requestPhone = pm.variables.get(\"randomPhone\");",
							"    pm.expect(jsonData).to.have.property(\"phone\", requestPhone);",
							"",
							"    pm.expect(jsonData).to.have.property(\"encrypted_password\");",
							"    pm.expect(jsonData).to.have.property(\"state\", true);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"::patch-address::\",\n    \"client_id\": \"{{randomClientId}}\",\n    \"gender\": \"FEMALE\",\n    \"name\": \"::patch-name::\",\n    \"age\": 50,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Update only the specified fields of an existing customer"
			},
			"response": [
				{
					"name": "Customer partially updated successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Partially update customer (Optionals)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"client_id\": \"{{$randomUUID}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Update only the specified fields of an existing customer"
			},
			"response": [
				{
					"name": "Customer partially updated successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Partially update customer (Optionals) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"client_id\": \"{{$randomUUID}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Update only the specified fields of an existing customer"
			},
			"response": [
				{
					"name": "Customer partially updated successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Partially update customer (Not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"::patch-address::\",\n    \"client_id\": \"{{randomClientId}}\",\n    \"gender\": \"FEMALE\",\n    \"name\": \"::patch-name::\",\n    \"age\": 50,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "ANY",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Update only the specified fields of an existing customer"
			},
			"response": [
				{
					"name": "Customer partially updated successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Partially update customer (Unique client)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"ClientId already exists error\", function () {",
							"    const jsonData = pm.response.json();",
							"    const errors = jsonData.errors.map(e => e.code);",
							"    pm.expect(errors).to.include(\"customer.clientId.unique\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"::patch-address::\",\n    \"client_id\": \"{{CUSTOMER_OTHER_CLIENT_ID}}\",\n    \"gender\": \"FEMALE\",\n    \"name\": \"::patch-name::\",\n    \"age\": 50,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Update only the specified fields of an existing customer"
			},
			"response": [
				{
					"name": "Customer partially updated successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Create customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response contains all required fields\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"client_id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"gender\");",
							"    pm.expect(jsonData).to.have.property(\"age\");",
							"    pm.expect(jsonData).to.have.property(\"address\");",
							"    pm.expect(jsonData).to.have.property(\"phone\");",
							"    pm.expect(jsonData).to.have.property(\"encrypted_password\");",
							"    pm.expect(jsonData).to.have.property(\"state\", true);",
							"});",
							"",
							"",
							"pm.test(\"Password has been encrypted\", function () {",
							"    const jsonData = pm.response.json();",
							"    const rawPassword = pm.variables.get(\"randomPassword\");",
							"    pm.expect(jsonData.encrypted_password).to.not.eql(rawPassword);",
							"});",
							"",
							"pm.test(\"Save customer id to collection variable\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"CUSTOMER_ID\", jsonData.id);",
							"    pm.expect(pm.collectionVariables.get(\"CUSTOMER_ID\")).to.eql(jsonData.id);",
							"});",
							"",
							"pm.test(\"Save customer client_id to collection variable\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"CUSTOMER_CLIENT_ID\", jsonData.client_id);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"{{$randomStreetAddress}}\",\n    \"client_id\": \"{{$randomUUID}}\",\n    \"gender\": \"{{randomGender}}\",\n    \"name\": \"{{$randomFullName}}\",\n    \"password\": \"Gl0r1@.12345\",\n    \"age\": \"{{randomAge}}\",\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Register a new customer"
			},
			"response": [
				{
					"name": "Customer successfully registered",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"OTHER\",\n  \"name\": \"<string>\",\n  \"password\": \"{f8x2\\\\u<WgL\",\n  \"age\": \"<integer>\",\n  \"phone\": \"+1794132865087\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update credentials",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"old_password\": \"Gl0r1@.12345\",\n    \"new_password\": \"Gl0r1@.67890\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id/credentials",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id",
						"credentials"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Modify the information of an existing customer"
			},
			"response": [
				{
					"name": "Customer successfully updated",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update credentials (Invalid credentials)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const genders = [\"MALE\", \"FEMALE\", \"NON_BINARY\", \"OTHER\", \"UNDISCLOSED\"];",
							"pm.variables.set(\"randomGender\", genders[Math.floor(Math.random() * genders.length)]);",
							"",
							"// Edad aleatoria entre 19 y 99",
							"const min = 19;",
							"const max = 99;",
							"const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;",
							"",
							"// Guardar en variable de entorno/colección",
							"pm.variables.set(\"randomAge\", randomAge);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());",
							"",
							"// Genera una password aleatoria que cumpla con el regex",
							"function generatePassword(length = 12) {",
							"    const upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
							"    const lower = \"abcdefghijklmnopqrstuvwxyz\";",
							"    const digits = \"0123456789\";",
							"    const special = \"!@#$%^&*()-_=+[]{};:,.<>?\";",
							"    ",
							"    // garantizar 1 de cada tipo",
							"    let password = \"\";",
							"    password += upper[Math.floor(Math.random() * upper.length)];",
							"    password += lower[Math.floor(Math.random() * lower.length)];",
							"    password += digits[Math.floor(Math.random() * digits.length)];",
							"    password += special[Math.floor(Math.random() * special.length)];",
							"    ",
							"    // rellenar el resto con mezcla",
							"    const allChars = upper + lower + digits + special;",
							"    for (let i = password.length; i < length; i++) {",
							"        password += allChars[Math.floor(Math.random() * allChars.length)];",
							"    }",
							"    ",
							"    // mezclar para que no quede ordenado",
							"    return password.split('').sort(() => Math.random() - 0.5).join('');",
							"}",
							"",
							"pm.variables.set(\"randomPassword\", generatePassword());",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Old password invalid error\", function () {",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData).to.have.property(\"errors\");",
							"",
							"    const errorCodes = jsonData.errors.map(e => e.code);",
							"    pm.expect(errorCodes).to.include(\"customer.oldPassword.invalid\");",
							"",
							"    const errorFields = jsonData.errors.map(e => e.field);",
							"    pm.expect(errorFields).to.include(\"old_password\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"old_password\": \"Gl0r1@.12345\",\n    \"new_password\": \"Gl0r1@.67890\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id/credentials",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id",
						"credentials"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Modify the information of an existing customer"
			},
			"response": [
				{
					"name": "Customer successfully updated",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"gender\": \"NON_BINARY\",\n  \"name\": \"<string>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"5192476084327\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Get paginated list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Customers list should contain at least one element\", function () {",
							"    pm.expect(jsonData).to.have.property(\"customers\");",
							"    pm.expect(jsonData.customers).to.be.an(\"array\").that.is.not.empty;",
							"});",
							"",
							"pm.test(\"Each customer element should contain required fields\", function () {",
							"    jsonData.customers.forEach(c => {",
							"        pm.expect(c).to.have.property(\"id\").that.is.a(\"string\");",
							"        pm.expect(c).to.have.property(\"name\").that.is.a(\"string\");",
							"        pm.expect(c).to.have.property(\"address\").that.is.a(\"string\");",
							"        pm.expect(c).to.have.property(\"phone\").that.is.a(\"string\");",
							"        pm.expect(c).to.have.property(\"password_status\").that.is.a(\"string\");",
							"        pm.expect(c).to.have.property(\"state\").that.is.a(\"boolean\");",
							"    });",
							"});",
							"",
							"pm.test(\"Page object should contain all expected fields\", function () {",
							"    pm.expect(jsonData).to.have.property(\"page\");",
							"    pm.expect(jsonData.page).to.have.property(\"number\").that.is.a(\"number\");",
							"    pm.expect(jsonData.page).to.have.property(\"size\").that.is.a(\"number\");",
							"    pm.expect(jsonData.page).to.have.property(\"totalElements\").that.is.a(\"number\");",
							"    pm.expect(jsonData.page).to.have.property(\"totalPages\").that.is.a(\"number\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{customerApiUrl}}/customers",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers"
					]
				},
				"description": "Retrieve detailed information about a specific customer by ID"
			},
			"response": [
				{
					"name": "Customer details successfully retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Delete customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}"
						}
					]
				},
				"description": "Retrieve detailed information about a specific customer by ID"
			},
			"response": [
				{
					"name": "Customer details successfully retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Delete customer (Not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}"
						}
					]
				},
				"description": "Retrieve detailed information about a specific customer by ID"
			},
			"response": [
				{
					"name": "Customer details successfully retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Get customer details (Not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}"
						}
					]
				},
				"description": "Retrieve detailed information about a specific customer by ID"
			},
			"response": [
				{
					"name": "Customer details successfully retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Fake",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Genera un identificar para cliente",
							"const clientId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
							"pm.variables.set(\"randomClientId\", clientId);",
							"",
							"// Genera un teléfono aleatorio que cumpla con el regex",
							"function generatePhone() {",
							"    // + seguido de entre 8 y 14 dígitos, comenzando con 1-9",
							"    const length = Math.floor(Math.random() * 7) + 8; // entre 8 y 14 dígitos",
							"    let number = \"\";",
							"    number += Math.floor(Math.random() * 9) + 1; // primer dígito 1–9",
							"    for (let i = 1; i < length; i++) {",
							"        number += Math.floor(Math.random() * 10);",
							"    }",
							"    return `+${number}`;",
							"}",
							"",
							"pm.variables.set(\"randomPhone\", generatePhone());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"address\": \"::patch-address::\",\n    \"client_id\": \"{{randomClientId}}\",\n    \"gender\": \"FEMALE\",\n    \"name\": \"::patch-name::\",\n    \"age\": 50,\n    \"phone\": \"{{randomPhone}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{customerApiUrl}}/customers/:id",
					"host": [
						"{{customerApiUrl}}"
					],
					"path": [
						"customers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{CUSTOMER_ID}}",
							"description": "(Required) Customer identifier"
						}
					]
				},
				"description": "Update only the specified fields of an existing customer"
			},
			"response": [
				{
					"name": "Customer partially updated successfully",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"address\": \"<string>\",\n  \"client_id\": \"<string>\",\n  \"encrypted_password\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"state\": \"<boolean>\",\n  \"age\": \"<integer>\",\n  \"phone\": \"7031264773\"\n}"
				},
				{
					"name": "Something in the request was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"detail\": \"<string>\",\n      \"title\": \"<string>\",\n      \"field\": \"<string>\"\n    }\n  ]\n}"
				},
				{
					"name": "Unauthorized.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Resource forbidden.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Some ID you requested was not found.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"name": "Something in the server was wrong.",
					"originalRequest": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"gender\": \"MALE\",\n  \"age\": \"<integer>\",\n  \"address\": \"<string>\",\n  \"phone\": \"374\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8081/api/v1"
		},
		{
			"key": "CUSTOMER_ID",
			"value": ""
		},
		{
			"key": "CUSTOMER_CLIENT_ID",
			"value": ""
		},
		{
			"key": "CUSTOMER_OTHER_CLIENT_ID",
			"value": ""
		}
	]
}